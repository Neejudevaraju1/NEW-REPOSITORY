<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-01T21:28:30 IST" name="Grouping" finished-at="2025-08-01T21:29:01 IST" duration-ms="31482">
    <groups>
      <group name="smoke">
        <method signature="LoginPageTest.VerifyUserCanLoginWithValidCredentials()[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" name="VerifyUserCanLoginWithValidCredentials" class="testscriptpackage.LoginPageTest"/>
        <method signature="LoginPageTest.verifyUserCanLoginWithValidUsernameAndInvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" name="verifyUserCanLoginWithValidUsernameAndInvalidPassword" class="testscriptpackage.LoginPageTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-08-01T21:28:30 IST" name="grouping" finished-at="2025-08-01T21:29:01 IST" duration-ms="31482">
      <class name="testscriptpackage.LoginPageTest">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:28:30 IST" name="beforeMethod" finished-at="2025-08-01T21:28:33 IST" duration-ms="2962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyUserCanLoginWithValidCredentials()[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:28:33 IST" name="VerifyUserCanLoginWithValidCredentials" finished-at="2025-08-01T21:28:34 IST" duration-ms="1295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUserCanLoginWithValidCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:28:34 IST" name="afterMethod" finished-at="2025-08-01T21:28:34 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyUserCanLoginWithValidCredentials status=SUCCESS method=LoginPageTest.VerifyUserCanLoginWithValidCredentials()[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:28:34 IST" name="beforeMethod" finished-at="2025-08-01T21:28:38 IST" duration-ms="4026" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanLoginWithValidUsernameAndInvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:28:38 IST" name="verifyUserCanLoginWithValidUsernameAndInvalidPassword" data-provider="credentials" finished-at="2025-08-01T21:28:49 IST" duration-ms="11193" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='alert alert-danger alert-dismissible']"}
  (Session info: chrome=138.0.7204.183)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.33.0', revision: '2c6aaad03a'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f9dfe2bed88e7bd5b62ec8f7aeae22f8, findElement {using=xpath, value=//div[@class='alert alert-danger alert-dismissible']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.183, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58507}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58507/devtoo..., se:cdpVersion: 138.0.7204.183, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f9dfe2bed88e7bd5b62ec8f7aeae22f8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='alert alert-danger alert-dismissible']"}
  (Session info: chrome=138.0.7204.183)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.33.0', revision: '2c6aaad03a'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f9dfe2bed88e7bd5b62ec8f7aeae22f8, findElement {using=xpath, value=//div[@class='alert alert-danger alert-dismissible']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 138.0.7204.183, chrome: {chromedriverVersion: 138.0.7204.183 (e90faf484dd..., userDataDir: C:\Users\User\AppData\Local...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58507}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58507/devtoo..., se:cdpVersion: 138.0.7204.183, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f9dfe2bed88e7bd5b62ec8f7aeae22f8
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:544)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:367)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:361)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy14.isDisplayed(Unknown Source)
at pages.LoginPage.isAlertMessageIsDisplayed(LoginPage.java:55)
at testscriptpackage.LoginPageTest.verifyUserCanLoginWithValidUsernameAndInvalidPassword(LoginPageTest.java:31)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanLoginWithValidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:28:49 IST" name="afterMethod" finished-at="2025-08-01T21:28:50 IST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanLoginWithValidUsernameAndInvalidPassword status=FAILURE method=LoginPageTest.verifyUserCanLoginWithValidUsernameAndInvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:28:50 IST" name="beforeMethod" finished-at="2025-08-01T21:28:56 IST" duration-ms="6856" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanLoginWithValidUsernameAndInvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:28:56 IST" name="verifyUserCanLoginWithValidUsernameAndInvalidPassword" data-provider="credentials" finished-at="2025-08-01T21:28:57 IST" duration-ms="560" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanLoginWithValidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:28:57 IST" name="afterMethod" finished-at="2025-08-01T21:28:57 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanLoginWithValidUsernameAndInvalidPassword status=SUCCESS method=LoginPageTest.verifyUserCanLoginWithValidUsernameAndInvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:28:57 IST" name="beforeMethod" finished-at="2025-08-01T21:29:01 IST" duration-ms="3817" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserCanLoginWithValidUsernameAndInvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:29:01 IST" name="verifyUserCanLoginWithValidUsernameAndInvalidPassword" data-provider="credentials" finished-at="2025-08-01T21:29:01 IST" duration-ms="608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanLoginWithValidUsernameAndInvalidPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2]" started-at="2025-08-01T21:29:01 IST" name="afterMethod" finished-at="2025-08-01T21:29:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanLoginWithValidUsernameAndInvalidPassword status=SUCCESS method=LoginPageTest.verifyUserCanLoginWithValidUsernameAndInvalidPassword(java.lang.String,java.lang.String)[pri:0, instance:testscriptpackage.LoginPageTest@75d4a5c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testscriptpackage.LoginPageTest -->
    </test> <!-- grouping -->
  </suite> <!-- Grouping -->
</testng-results>
